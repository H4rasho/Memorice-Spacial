{"version":3,"sources":["types/types.js","actions/rank.js","components/auth/Login.js","hooks/useForm.js","actions/auth.js","actions/memorice.js","data/naves.js","components/ui/Instruciones.js","components/memorice/MemoriceJuego.js","helpers/restaurarNaves.js","components/memorice/Rank.js","components/ui/Footer.js","components/ui/Header.js","actions/ui.js","components/ui/NavBar.js","routes/MemoriceRoutes.js","routes/PrivateRoutes.js","routes/AppRouter.js","reducers/authReducer.js","reducers/memoriceReducer.js","reducers/rankReducer.js","reducers/uiReducer.js","store/store.js","App.js","index.js"],"names":["types","startRank","time","type","payload","Login","history","dispatch","useDispatch","initialState","useState","values","setValues","target","name","value","useForm","handleImputChange","user","id","Date","handleSubmit","e","preventDefault","length","cargarNombre","replace","className","onSubmit","placeholder","onChange","autoComplete","ocultarNave","nave","clearActive","naves","modo","img","Instruciones","MemoriceJuego","click","setclick","cont","setCont","useSelector","state","memorice","active","naveS","auth","start","rank","bestScore","handleClick","mostrarNave","finish","parseInt","getTime","Swal","fire","setTimeout","setActiveNave","map","onClick","src","alt","icon","faRedo","size","console","log","cargarNaves","sort","Math","random","Rank","now","displayName","toString","Footer","faTwitter","faInstagram","Header","navBar","ui","faBars","to","NavBar","MemoriceRoutes","exact","path","component","PrivateRoutes","isAuthenticated","Component","rest","props","App","logged","reducers","combineReducers","action","ran","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97e7ef06.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    cargarNaves: '[Memorice] Cargar Naves',\r\n    active: ' [Memorice] active',\r\n    mostarNave: '[Memorice] Mostrar',\r\n    ocultarNave: '[Memorice] Ocultar',\r\n    clearActive: '[Memorice] Clea active',\r\n    playAgain: '[Memorice] Play again',\r\n\r\n    uiOcultarNavBar: '[UI] Ocultar NavBar',\r\n    uiMostrarNavBar: '[Mostar] NavBar',\r\n\r\n    login: '[Auth] Login',\r\n\r\n    rankAdd: '[Rank] add',\r\n    rankStart: '[Rank] Start',\r\n    timeUpdate: '[Rank] TimeUpdate',\r\n    upDateBestScore: 'Rank Update Best Score',\r\n\r\n}\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const addRank = (rank) => ({\r\n    type: types.rankAdd,\r\n    payload: rank\r\n})\r\n\r\nexport const startRank = (time) => ({\r\n    type: types.rankStart,\r\n    payload: time\r\n})\r\n\r\nexport const timeupdate = (rank) => ({\r\n    type: types.timeUpdate,\r\n    payload: rank\r\n})\r\n\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { cargarNombre } from '../../actions/auth';\r\nimport { startRank } from '../../actions/rank';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const Login = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [values, handleImputChange] = useForm({\r\n        name: ''\r\n    });\r\n    \r\n    const {name} = values\r\n    const user = {\r\n        name,\r\n        id: new Date()\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (name.length > 3){\r\n            dispatch(cargarNombre(user))\r\n            dispatch(startRank(new Date()))\r\n        }\r\n        history.replace('/')\r\n    }\r\n\r\n    return (\r\n        <form className=\"login-conteniner\" onSubmit={handleSubmit}>\r\n            <h1><b>Bienvendido a <br/> Memorice Spacial</b></h1>\r\n            <h2>Coloca tu nombre</h2>\r\n            <input \r\n                type=\"text\"\r\n                name=\"name\" \r\n                placeholder=\"Name\" \r\n                value={name}\r\n                onChange={handleImputChange}\r\n                autoComplete=\"off\"   \r\n            />\r\n            <button onSubmit={handleSubmit}>Enviar</button>\r\n        </form>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ()=> {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleImputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n\r\n    return [values, handleImputChange, reset];\r\n\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const cargarNombre = (user) => ({\r\n    type: types.login,\r\n    payload: user\r\n})\r\n\r\n\r\nexport const upDateBestScore = (rank) => ({\r\n    type: types.upDateBestScore,\r\n    payload: rank\r\n})\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setActiveNave = (nave) => ({\r\n    type: types.active,\r\n    payload: nave\r\n})\r\n\r\nexport const mostrarNave = (nave) => ({\r\n    type: types.mostarNave,\r\n    payload: nave\r\n})\r\n\r\nexport const ocultarNave = (nave) => ({\r\n    type: types.ocultarNave,\r\n    payload: nave\r\n})\r\n\r\n\r\n\r\nexport const cargarNaves = (naves) => ({\r\n    type: types.cargarNaves,\r\n    payload: naves\r\n})\r\n\r\nexport const clearActive = () => ({\r\n    type: types.clearActive\r\n})\r\n\r\nexport const playAgain = () => ({\r\n    type: types.playAgain\r\n})\r\n\r\n","\r\nexport const naves = [\r\n    {\r\n        id: \"nave01\",\r\n        name: \"nave1\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/goliethe_wsqhbz.png\",\r\n    },\r\n    {\r\n        id: \"nave02\",\r\n        name: \"nave1\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/goliethe_wsqhbz.png\",\r\n    },\r\n    {\r\n        id: \"nave03\",\r\n        name: \"nave2\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/FenixSkin_iibtf6.png\",\r\n    },\r\n    {\r\n        id: \"nave04\",\r\n        name: \"nave2\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/FenixSkin_iibtf6.png\",\r\n    },\r\n    {\r\n        id: \"nave05\",\r\n        name: \"nave3\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/CohegisSkin_hecunl.png\",\r\n    },\r\n    {\r\n        id: \"nave06\",\r\n        name: \"nave3\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/CohegisSkin_hecunl.png\",\r\n    },\r\n    {\r\n        id: \"nave07\",\r\n        name: \"nave4\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/phobia_ffqcpb.png\",\r\n    },\r\n    {\r\n        id: \"nave08\",\r\n        name: \"nave4\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/phobia_ffqcpb.png\",\r\n    },\r\n    {\r\n        id: \"nave09\",\r\n        name: \"nave5\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/payrex_a3ojun.png\",\r\n    },\r\n    {\r\n        id: \"nave10\",\r\n        name: \"nave5\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/payrex_a3ojun.png\",\r\n    },\r\n    {\r\n        id: \"nave11\",\r\n        name: \"nave6\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/BlazeSkin_clazfz.png\",\r\n    },\r\n    {\r\n        id: \"nave12\",\r\n        name: \"nave6\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/BlazeSkin_clazfz.png\",\r\n    },\r\n    \r\n]\r\n\r\n","import React from 'react'\r\n\r\nexport const Instruciones = () => {\r\n    return (\r\n        <div className=\"memorice__instructions\">\r\n            <p>Es un memorice, ¿Cómo no vas a saber jugar un memorice?, hace click en las cartas</p> \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2';\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { cargarNaves, clearActive, mostrarNave, ocultarNave, playAgain, setActiveNave } from '../../actions/memorice';\r\nimport { naves } from '../../data/naves'\r\nimport { Instruciones } from '../ui/Instruciones';\r\nimport { startRank } from '../../actions/rank';\r\nimport { restaurasNaves } from '../../helpers/restaurarNaves';\r\nimport { upDateBestScore } from '../../actions/auth';\r\n\r\nexport const MemoriceJuego = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [click, setclick] = useState(0)\r\n    const [cont, setCont] = useState(0)\r\n\r\n    const { active, naveS } = useSelector(state => state.memorice)\r\n    const {user} = useSelector(state => state.auth)\r\n    const {start} = useSelector(state => state.rank)\r\n    const {bestScore} = user\r\n\r\n    const handleClick = (nave) => {\r\n\r\n        if (click < 2){\r\n            nave.modo = \"descubierto\"\r\n            setclick(click+1)\r\n            dispatch(mostrarNave(nave))\r\n            if (!active) {\r\n                dispatch(setActiveNave(nave))\r\n            }\r\n            else {\r\n                if (active.name === nave.name) {\r\n                    dispatch(clearActive())\r\n                    setclick(0)\r\n                    setCont(cont+1)\r\n                    if (cont+1 === naveS.length /2){\r\n                        const finish = new Date()\r\n                        const time = parseInt(finish.getTime() - start.getTime()) / 1000;\r\n                        Swal.fire('Felicitaciones', `<h1> Has ganado en <b style=\"color:red\">${time}<b> seg </h1>`, 'success')\r\n                        if(!bestScore || time < bestScore){\r\n                            dispatch(upDateBestScore(time));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    setTimeout(() => {\r\n                        nave.modo = \"oculto\"\r\n                        dispatch(ocultarNave(nave))\r\n                        active.modo = \"oculto\"\r\n                        dispatch(ocultarNave(active))\r\n                        dispatch(clearActive())\r\n                        setclick(0)\r\n                    }, 1000);\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePlayAgain = () => {\r\n        console.log(\"click\");\r\n        setclick(0)\r\n        setCont(0)\r\n        restaurasNaves(naves);\r\n        dispatch(playAgain())\r\n        dispatch(startRank(new Date()))\r\n        dispatch(cargarNaves(naves.sort(function () { return Math.random() - 0.5 })));\r\n    }\r\n\r\n    return (\r\n        <div className=\"memorice__juego\"> \r\n            <Instruciones />\r\n            <div className=\"memorice__juego-cards\">\r\n                {\r\n                    naveS.map((nave) => (\r\n                        \r\n                        nave.modo === 'oculto'\r\n                            ? <div className=\"memorice__card memorice__card-img-oculta \" key={nave.id} onClick={(e) => handleClick(nave)}>\r\n\r\n                            </div>\r\n                            : <div\r\n                                className=\"memorice__card\"\r\n                                key={nave.id}\r\n                            >\r\n                                <img className=\"memorice__card-img\" src={nave.img} alt=\"nashor spacial\" />\r\n                            </div>\r\n                    ))\r\n                }\r\n                <div className=\"memorice__button\">\r\n                    <FontAwesomeIcon \r\n                        className=\"memorice__button-play-again\" \r\n                        icon={faRedo} \r\n                        size=\"2x\"\r\n                        onClick={handlePlayAgain}    \r\n                    />\r\n                </div>\r\n                <h4 className=\"memorice__button-title\">Jugar otra vez</h4>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n\r\nexport const  restaurasNaves = (naves) => {\r\n    return naves.map(nave => (\r\n        nave.modo = \"oculto\"\r\n    ))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const Rank = () => {\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const id = Date.now()\r\n    const { displayName, bestScore } = user\r\n\r\n    return (\r\n        <div className=\"rank__container\">\r\n            <h1>Rank</h1>\r\n            {\r\n                bestScore\r\n                    ?\r\n                    <table className=\"rank__table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Time  [s]</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            <tr key={id.toString()}>\r\n                                <td> {displayName} </td>\r\n                                <td> {bestScore} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <h2>No Rank encontrado</h2>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"memorice__footer\">\r\n\r\n            <div>\r\n                <h4 className=\"memorice__autor\">Desarrollado por</h4>\r\n                <h5 className=\"memorice__autor\">H4rasho</h5>\r\n                <FontAwesomeIcon icon= {faTwitter} size=\"2x\"/> <span>  Twitter</span>\r\n            </div>\r\n            <div>\r\n                <h4 className=\"memorice__autor\"> diseño de naves</h4>\r\n                <h5 className=\"memorice__autor\">Maximus Games Studios</h5>\r\n                <FontAwesomeIcon icon= {faInstagram} size=\"2x\"/> <span>  Instagram</span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mostarNavBar } from '../../actions/ui';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n\r\n    const {navBar} = useSelector(state => state.ui)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(mostarNavBar(navBar))\r\n    }\r\n\r\n    return (\r\n        <header className=\"memorice__header\">\r\n            <img src=\"https://cdn.discordapp.com/attachments/823026225194336286/870417421859684392/120x120.png\" className=\"memorice__header-logo\" alt=\"nashor spacial\"/>\r\n            <h1 className=\"memorice__header-title\">MEMORICE SPACIAL</h1>\r\n            <FontAwesomeIcon icon= {faBars}  size=\"2x\" onClick={handleClick} className=\"memorice__icon-header\"/>\r\n            <nav className=\"memorice__nav-laptop\">\r\n                <ul>\r\n                    <Link className=\"memorice__nav-laptop-Link\" to=\"/\">Inicio</Link>\r\n                    <Link className=\"memorice__nav-laptop-Link\" to=\"/rank\">Rank</Link>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const mostarNavBar = (estado) => ({\r\n    type: types.uiMostrarNavBar,\r\n    payload: !estado\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const NavBar = () => {\r\n    const {navBar} = useSelector(state => state.ui)\r\n    return (\r\n        <nav className={`${navBar ? \"memorice__NavBar\" : \"dispay-none\"}`}>\r\n            <ul>\r\n                <Link className=\"memorice__nav-Link\" to=\"/\">Inicio</Link>\r\n                <Link className=\"memorice__nav-Link\" to=\"/rank\">Rank</Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { MemoriceJuego } from '../components/memorice/MemoriceJuego'\r\nimport { Rank } from '../components/memorice/Rank'\r\nimport { Footer } from '../components/ui/Footer'\r\nimport { Header } from '../components/ui/Header'\r\nimport { NavBar } from '../components/ui/NavBar'\r\n\r\nexport const MemoriceRoutes = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"memorice__container\">\r\n                <Header />\r\n                <NavBar />\r\n                <Switch>              \r\n                    <Route exact path=\"/\" component={ MemoriceJuego }/>\r\n                    <Route exact path=\"/rank\" component={ Rank }/>\r\n                    <Redirect to=\"/profile\"/>\r\n                </Switch>\r\n                <Footer />    \r\n            </div>     \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component= { (props) => (\r\n                (isAuthenticated)\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/login\"/>   \r\n            )}\r\n        />\r\n            \r\n    )   \r\n}\r\n\r\n\r\nPrivateRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { Login } from \"../components/auth/Login\";\r\nimport { MemoriceRoutes } from \"./MemoriceRoutes\";\r\nimport { PrivateRoutes } from \"./PrivateRoutes\";\r\n\r\nexport default function App() {\r\n    const {user} = useSelector(state => state.auth)\r\n\r\n    const {logged} = user\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n\r\n          <PrivateRoutes \r\n            path=\"/\" \r\n            component={MemoriceRoutes}\r\n            isAuthenticated={logged}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    user: {\r\n        logged: false,\r\n        displayName: null,\r\n    }\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n     \r\n    switch (action.type) {\r\n        case types.login: \r\n            return {\r\n                ...state,\r\n                user: {\r\n                    logged: true,\r\n                    id: action.payload.id,\r\n                    displayName: action.payload.name\r\n                }\r\n            }\r\n        case types.upDateBestScore:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    bestScore: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import { naves } from \"../data/naves\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    naveS: naves.sort(function () { return Math.random() - 0.5 }),\r\n    active: null,\r\n}\r\n\r\n\r\nexport const memoriceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case  types.cargarNaves:\r\n            return {\r\n                ...state,\r\n                naveS: action.payload\r\n            }\r\n\r\n        case types.active:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    id: action.payload.id,\r\n                    name: action.payload.name,\r\n                    img: action.payload.img \r\n                }\r\n            }\r\n\r\n        case types.mostarNave: \r\n            return{\r\n                ...state,\r\n                naveS: state.naveS.map(nave => \r\n                    nave.id === action.payload\r\n                    ? action.payload\r\n                    : nave   \r\n                )\r\n            }\r\n\r\n        case types.ocultarNave: \r\n            return{\r\n                ...state,\r\n                naveS: state.naveS.map(nave => \r\n                    nave.id === action.payload.id\r\n                    ? action.payload\r\n                    : nave   \r\n                )\r\n            }\r\n\r\n        case types.clearActive:{\r\n            return {\r\n                ...state,\r\n                active: null\r\n            }\r\n        }\r\n        case types.playAgain:\r\n            return initialState\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    rank: []\r\n}\r\n\r\n\r\nexport const rankReducer = (state= initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.rankAdd:\r\n            return {\r\n                ...state,\r\n                rank: [\r\n                    ...state.rank,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.rankStart:\r\n            return {\r\n                ...state,\r\n                start: action.payload\r\n            }\r\n        case types.timeUpdate:\r\n            return {\r\n                ...state,\r\n                rank: state.rank.map(ran=> (\r\n                    ran.name === action.payload.name\r\n                    ? ran.time = action.payload.time\r\n                    : ran\r\n                ))\r\n            } \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    navBar: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiMostrarNavBar:\r\n            return {\r\n                ...state,\r\n                navBar: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, combineReducers} from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { memoriceReducer } from '../reducers/memoriceReducer';\r\nimport { rankReducer } from '../reducers/rankReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n    memorice: memoriceReducer,\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    rank: rankReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react'\nimport {Provider} from 'react-redux'\n\n\nimport AppRouter from './routes/AppRouter'   \nimport { store } from './store/store'\nimport './styles/styles.scss'\n\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["types/types.js","actions/memorice.js","data/naves.js","components/ui/Instruciones.js","helpers/fetch.js","actions/rank.js","components/memorice/MemoriceJuego.js","helpers/restaurarNaves.js","components/memorice/Rank.js","components/ui/Footer.js","components/ui/Header.js","actions/ui.js","actions/auth.js","components/ui/NavBar.js","routes/MemoriceRoutes.js","routes/AppRouter.js","reducers/authReducer.js","reducers/memoriceReducer.js","reducers/rankReducer.js","reducers/uiReducer.js","store/store.js","App.js","index.js"],"names":["types","ocultarNave","nave","type","payload","clearActive","naves","id","name","modo","img","Instruciones","className","baseUrl","process","fetchConToken","endpoint","data","method","url","token","localStorage","getItem","fetch","headers","body","JSON","stringify","startRank","time","getBestRank","getRanks","ranks","updateBestRank","MemoriceJuego","dispatch","useDispatch","useState","click","setclick","cont","setCont","useSelector","state","memorice","active","naveS","rank","start","bestScore","navBar","ui","useEffect","disptach","a","resp","json","ok","console","log","msg","Date","handleClick","mostrarNave","length","finish","parseInt","getTime","Swal","fire","startUpdateBestRank","startAddRank","setTimeout","setActiveNave","map","onClick","e","src","alt","icon","faRedo","size","cargarNaves","sort","Math","random","Rank","ranking","user","_id","Footer","faTwitter","href","rel","target","faInstagram","Header","faBars","to","logout","NavBar","clear","MemoriceRoutes","exact","path","component","App","initialState","checking","chekingRank","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","auth","ran","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a768a278.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    cargarNaves: '[Memorice] Cargar Naves',\r\n    active: ' [Memorice] active',\r\n    mostarNave: '[Memorice] Mostrar',\r\n    ocultarNave: '[Memorice] Ocultar',\r\n    clearActive: '[Memorice] Clea active',\r\n    playAgain: '[Memorice] Play again',\r\n\r\n    uiOcultarNavBar: '[UI] Ocultar NavBar',\r\n    uiMostrarNavBar: '[Mostar] NavBar',\r\n\r\n\r\n    authCheckingFinish: '[auth] Checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n\r\n    login: '[Auth] Login',\r\n\r\n    rankAdd: '[Rank] add',\r\n    rankStart: '[Rank] Start',\r\n    timeUpdate: '[Rank] TimeUpdate',\r\n    upDateBestScore: 'Rank Update Best Score',\r\n    rankStartGetRank: '[Rank] Start Get Rank',\r\n    rankStarGetBestRank: '[Rank] Start Get Best Score',\r\n    rankStartAdd: '[Rank] Start new Rank',\r\n    rankStartUpdateRank: '[Rank] Start Update Rank',\r\n    rankCheckingFinish: ' [Rank] Checking finish ',\r\n\r\n}\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setActiveNave = (nave) => ({\r\n    type: types.active,\r\n    payload: nave\r\n})\r\n\r\nexport const mostrarNave = (nave) => ({\r\n    type: types.mostarNave,\r\n    payload: nave\r\n})\r\n\r\nexport const ocultarNave = (nave) => ({\r\n    type: types.ocultarNave,\r\n    payload: nave\r\n})\r\n\r\n\r\n\r\nexport const cargarNaves = (naves) => ({\r\n    type: types.cargarNaves,\r\n    payload: naves\r\n})\r\n\r\nexport const clearActive = () => ({\r\n    type: types.clearActive\r\n})\r\n\r\nexport const playAgain = () => ({\r\n    type: types.playAgain\r\n})\r\n\r\n","\r\nexport const naves = [\r\n    {\r\n        id: \"nave01\",\r\n        name: \"nave1\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/goliethe_wsqhbz.png\",\r\n    },\r\n    {\r\n        id: \"nave02\",\r\n        name: \"nave1\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/goliethe_wsqhbz.png\",\r\n    },\r\n    {\r\n        id: \"nave03\",\r\n        name: \"nave2\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/FenixSkin_iibtf6.png\",\r\n    },\r\n    {\r\n        id: \"nave04\",\r\n        name: \"nave2\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/FenixSkin_iibtf6.png\",\r\n    },\r\n    {\r\n        id: \"nave05\",\r\n        name: \"nave3\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/CohegisSkin_hecunl.png\",\r\n    },\r\n    {\r\n        id: \"nave06\",\r\n        name: \"nave3\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/CohegisSkin_hecunl.png\",\r\n    },\r\n    {\r\n        id: \"nave07\",\r\n        name: \"nave4\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/phobia_ffqcpb.png\",\r\n    },\r\n    {\r\n        id: \"nave08\",\r\n        name: \"nave4\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/phobia_ffqcpb.png\",\r\n    },\r\n    {\r\n        id: \"nave09\",\r\n        name: \"nave5\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/payrex_a3ojun.png\",\r\n    },\r\n    {\r\n        id: \"nave10\",\r\n        name: \"nave5\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/payrex_a3ojun.png\",\r\n    },\r\n    {\r\n        id: \"nave11\",\r\n        name: \"nave6\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/BlazeSkin_clazfz.png\",\r\n    },\r\n    {\r\n        id: \"nave12\",\r\n        name: \"nave6\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/BlazeSkin_clazfz.png\",\r\n    },\r\n    \r\n]\r\n\r\n","import React from 'react'\r\n\r\nexport const Instruciones = () => {\r\n    return (\r\n        <div className=\"memorice__instructions\">\r\n            <h1>Instruciones</h1>\r\n            <p>Has click en dos cartas si las cartas son iguales felicidades has desbloqueado esa Nave Spacial, en caso contrario las cartas se ocultaran de nuevo,\r\n                intenta memorizar las cartas para desbloquearlas en el menor tiempo posible. ¿Podrás estar en el Ranking?    \r\n            </p> \r\n        </div>\r\n    )\r\n}\r\n","\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\n const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    }else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') =>{\r\n \r\n    const url = `${ baseUrl }/${endpoint}`;//localhost:4000/api/endpoint\r\n    const token = localStorage.getItem('token') || '';\r\n \r\n    if(method ==='GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n \r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import { fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const addRank = (rank) => ({\r\n    type: types.rankAdd,\r\n    payload: rank\r\n})\r\n\r\nexport const startRank = (time) => ({\r\n    type: types.rankStart,\r\n    payload: time\r\n})\r\n\r\nexport const timeupdate = (rank) => ({\r\n    type: types.timeUpdate,\r\n    payload: rank\r\n})\r\n\r\nexport const startGetRanks = () => {\r\n\r\n    return async (disptach) => {\r\n\r\n        const resp = await fetchConToken('rank')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            disptach(getRanks(body.ranks))\r\n        } else {\r\n            console.log(body.msg);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGetBestRank = () => {\r\n\r\n    return async (disptach) => {\r\n\r\n        const resp = await fetchConToken('rank/bestScore');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            if (body.bestScore) {\r\n                const time = body.bestScore.time;\r\n                const id = body.bestScore.id\r\n                disptach(getBestRank({time, id}))\r\n            }\r\n        }\r\n        else {\r\n            console.log(body.msg)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const startAddRank = (time) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('rank', {time}, 'POST')\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            console.log('agregado')\r\n        }\r\n        else {\r\n            console.log(body.msg)\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUpdateBestRank = (time, id) => {\r\n    return async(disptach) => {\r\n        console.log(`rank/update/${id}`);\r\n        const resp = await fetchConToken(`rank/update/${id}`, {time}, 'PUT');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            disptach(updateBestRank(time))\r\n            console.log('updated')\r\n        }\r\n        else {\r\n            console.log(body.msg)\r\n        }\r\n    } \r\n}\r\n\r\n\r\n\r\nexport const rankCheckingFinish = () => ({\r\n    type: types.rankCheckingFinish\r\n})\r\n\r\nconst getBestRank = (time) => ({\r\n    type: types.rankStarGetBestRank,\r\n    payload: time\r\n})\r\n\r\nconst getRanks = (ranks) => ({\r\n    type: types.rankStartGetRank,\r\n    payload: ranks\r\n})\r\n\r\nconst updateBestRank = (time) => ({\r\n    type: types.rankStartUpdateRank,\r\n    payload: time\r\n})","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  cargarNaves,\r\n  clearActive,\r\n  mostrarNave,\r\n  ocultarNave,\r\n  playAgain,\r\n  setActiveNave,\r\n} from \"../../actions/memorice\";\r\nimport { naves } from \"../../data/naves\";\r\nimport { Instruciones } from \"../ui/Instruciones\";\r\nimport {\r\n  startAddRank,\r\n  startGetBestRank,\r\n  startRank,\r\n  startUpdateBestRank,\r\n} from \"../../actions/rank\";\r\nimport { restaurasNaves } from \"../../helpers/restaurarNaves\";\r\n\r\nexport const MemoriceJuego = () => {\r\n  const dispatch = useDispatch();\r\n  const [click, setclick] = useState(0);\r\n  const [cont, setCont] = useState(0);\r\n\r\n  const { active, naveS } = useSelector((state) => state.memorice);\r\n  const { start, bestScore } = useSelector((state) => state.rank);\r\n  const { navBar } = useSelector((state) => state.ui);\r\n\r\n  useEffect(() => {\r\n    dispatch(startGetBestRank());\r\n    dispatch(startRank(new Date()));\r\n  }, [dispatch]);\r\n\r\n  const handleClick = (nave) => {\r\n    if (click < 2) {\r\n      nave.modo = \"descubierto\";\r\n      setclick(click + 1);\r\n      dispatch(mostrarNave(nave));\r\n      if (!active) {\r\n        dispatch(setActiveNave(nave));\r\n      } else {\r\n        if (active.name === nave.name) {\r\n          dispatch(clearActive());\r\n          setclick(0);\r\n          setCont(cont + 1);\r\n          if (cont + 1 === naveS.length / 2) {\r\n            const finish = new Date();\r\n            const time = parseInt(finish.getTime() - start.getTime()) / 1000;\r\n            Swal.fire(\r\n              \"Felicitaciones\",\r\n              `<h1> Has ganado en <b style=\"color:red\">${time}<b> seg </h1>`,\r\n              \"success\"\r\n            );\r\n            if (!bestScore) {\r\n              dispatch(startAddRank(time));\r\n            } else if (time < bestScore.time) {\r\n              const id = bestScore.id;\r\n              dispatch(startUpdateBestRank(time, id));\r\n            }\r\n          }\r\n        } else {\r\n          setTimeout(() => {\r\n            nave.modo = \"oculto\";\r\n            dispatch(ocultarNave(nave));\r\n            active.modo = \"oculto\";\r\n            dispatch(ocultarNave(active));\r\n            dispatch(clearActive());\r\n            setclick(0);\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePlayAgain = () => {\r\n    console.log(\"click\");\r\n    setclick(0);\r\n    setCont(0);\r\n    restaurasNaves(naves);\r\n    dispatch(playAgain());\r\n    dispatch(startRank(new Date()));\r\n    dispatch(\r\n      cargarNaves(\r\n        naves.sort(function () {\r\n          return Math.random() - 0.5;\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        navBar ? \"memorice__juego-navBar\" : \"memorice__juego-noNavBAr\"\r\n      } memorice__juego`}\r\n    >\r\n      <Instruciones />\r\n      <div className=\"memorice__juego-cards\">\r\n        {naveS.map((nave) =>\r\n          nave.modo === \"oculto\" ? (\r\n            <div\r\n              className=\"memorice__card memorice__card-img-oculta \"\r\n              key={nave.id}\r\n              onClick={(e) => handleClick(nave)}\r\n            ></div>\r\n          ) : (\r\n            <div className=\"memorice__card\" key={nave.id}>\r\n              <img\r\n                className=\"memorice__card-img\"\r\n                src={nave.img}\r\n                alt=\"nashor spacial\"\r\n              />\r\n            </div>\r\n          )\r\n        )}\r\n        <div className=\"memorice__button\">\r\n          <FontAwesomeIcon\r\n            className=\"memorice__button-play-again\"\r\n            icon={faRedo}\r\n            size=\"2x\"\r\n            onClick={handlePlayAgain}\r\n          />\r\n        </div>\r\n        <h4 className=\"memorice__button-title\">Jugar otra vez</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","\r\n\r\nexport const  restaurasNaves = (naves) => {\r\n    return naves.map(nave => (\r\n        nave.modo = \"oculto\"\r\n    ))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { rankCheckingFinish, startGetRanks } from '../../actions/rank'\r\n\r\nexport const Rank = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(startGetRanks());\r\n        dispatch(rankCheckingFinish());\r\n    }, [dispatch])\r\n\r\n    const {navBar} = useSelector(state => state.ui)\r\n    const {ranking} = useSelector(state => state.rank)\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={`${navBar ? \"memorice__juego-navBar\" : \"memorice__juego-noNavBAr\"} rank__container`}>\r\n            <h1>Top 10</h1>\r\n            {\r\n                ranking.length > 0\r\n                    ?\r\n                    <table className=\"rank__table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Time  [s]</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                ranking.map(rank => (\r\n                                    <tr key={rank.user._id}>\r\n                                    <td> {rank.user.name} </td>\r\n                                    <td> {rank.time} </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <h2>No Rank encontrado</h2>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"memorice__footer\">\r\n\r\n            <div>\r\n                <h4 className=\"memorice__autor\">Desarrollado por</h4>\r\n                <h5 className=\"memorice__autor\">H4rasho</h5>\r\n                <FontAwesomeIcon icon= {faTwitter} size=\"2x\" href=\"https://twitter.com/H4rasho\" /><span> <a href=\"https://twitter.com/H4rasho\" rel=\"noreferrer\" target=\"_blank\" > Twitter</a> </span>\r\n               \r\n            </div>\r\n            <div>\r\n                <h4 className=\"memorice__autor\">Diseño de naves</h4>\r\n                <h5 className=\"memorice__autor\">Maximus Games Studios</h5>\r\n                <FontAwesomeIcon icon= {faInstagram} size=\"2x\"/> <span> <a href=\"https://www.instagram.com/nashorspacial/\" rel=\"noreferrer\" target=\"_blank\" > Instagram </a></span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mostarNavBar } from \"../../actions/ui\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  const { navBar } = useSelector((state) => state.ui);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    dispatch(mostarNavBar(navBar));\r\n  };\r\n\r\n  return (\r\n    <header className=\"memorice__header\">\r\n      <img\r\n        src=\"https://cdn.discordapp.com/attachments/823026225194336286/870417421859684392/120x120.png\"\r\n        className=\"memorice__header-logo\"\r\n        alt=\"nashor spacial\"\r\n      />\r\n      <h1 className=\"memorice__header-title\">MEMORICE SPACIAL</h1>\r\n      <FontAwesomeIcon\r\n        icon={faBars}\r\n        size=\"2x\"\r\n        onClick={handleClick}\r\n        className=\"memorice__icon-header\"\r\n      />\r\n      <nav className=\"memorice__nav-laptop\">\r\n        <ul>\r\n          <Link className=\"memorice__nav-laptop-Link\" to=\"/\">\r\n            Inicio\r\n          </Link>\r\n          <Link className=\"memorice__nav-laptop-Link\" to=\"/rank\">\r\n            Rank\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const mostarNavBar = (estado) => ({\r\n    type: types.uiMostrarNavBar,\r\n    payload: !estado\r\n})\r\n\r\n\r\n\r\n","import { fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const cargarNombre = (user) => ({\r\n  type: types.login,\r\n  payload: user,\r\n});\r\n\r\nexport const upDateBestScore = (rank) => ({\r\n  type: types.upDateBestScore,\r\n  payload: rank,\r\n});\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken(\"auth/renew\");\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(checkingFinish());\r\n      console.log(body.msg);\r\n    }\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.authLogout,\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\n\r\nexport const NavBar = () => {\r\n    const {navBar} = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <nav className={`${navBar ? \"memorice__NavBar\" : \"dispay-none\"}`}>\r\n            <ul>\r\n                <Link className=\"memorice__nav-Link\" to=\"/\">Inicio</Link>\r\n                <Link className=\"memorice__nav-Link\" to=\"/rank\">Rank</Link>\r\n                <Link \r\n                    className=\"memorice__nav-Link\" to=\"/\"\r\n                    onClick={handleLogout}\r\n                >    \r\n                Salir</Link>\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { MemoriceJuego } from '../components/memorice/MemoriceJuego'\r\nimport { Rank } from '../components/memorice/Rank'\r\nimport { Footer } from '../components/ui/Footer'\r\nimport { Header } from '../components/ui/Header'\r\nimport { NavBar } from '../components/ui/NavBar'\r\n\r\nexport const MemoriceRoutes = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"memorice__container\">\r\n                <Header />\r\n                <NavBar />\r\n                <Switch>              \r\n                    <Route exact path=\"/\" component={ MemoriceJuego }/>\r\n                    <Route exact path=\"/rank\" component={ Rank }/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n                <Footer />    \r\n            </div>     \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { MemoriceRoutes } from \"./MemoriceRoutes\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <MemoriceRoutes />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n     \r\n    switch (action.type) {\r\n           \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            } \r\n\r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.upDateBestScore:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    bestScore: action.payload\r\n                }\r\n            }\r\n        case types.authLogout : \r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import { naves } from \"../data/naves\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    naveS: naves.sort(function () { return Math.random() - 0.5 }),\r\n    active: null,\r\n}\r\n\r\n\r\nexport const memoriceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.active:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    id: action.payload.id,\r\n                    name: action.payload.name,\r\n                    img: action.payload.img \r\n                }\r\n            }\r\n\r\n        case types.mostarNave: \r\n            return{\r\n                ...state,\r\n                naveS: state.naveS.map(nave => \r\n                    nave.id === action.payload\r\n                    ? action.payload\r\n                    : nave   \r\n                )\r\n            }\r\n\r\n        case types.ocultarNave: \r\n            return{\r\n                ...state,\r\n                naveS: state.naveS.map(nave => \r\n                    nave.id === action.payload.id\r\n                    ? action.payload\r\n                    : nave   \r\n                )\r\n            }\r\n\r\n        case types.clearActive:{\r\n            return {\r\n                ...state,\r\n                active: null\r\n            }\r\n        }\r\n        case types.playAgain:\r\n            return initialState\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    ranking: [],\r\n    bestScore: null,\r\n    chekingRank: true\r\n}\r\n\r\n\r\nexport const rankReducer = (state= initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.rankAdd:\r\n            return {\r\n                ...state,\r\n                ranking: [\r\n                    ...state.ranking,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.rankStart:\r\n            return {\r\n                ...state,\r\n                start: action.payload\r\n            }\r\n        case types.timeUpdate:\r\n            return {\r\n                ...state,\r\n                rank: state.rank.map(ran=> (\r\n                    ran.name === action.payload.name\r\n                    ? ran.time = action.payload.time\r\n                    : ran\r\n                ))\r\n            }\r\n        case types.rankStartGetRank:\r\n            return {\r\n                ...state,\r\n                ranking: action.payload\r\n                \r\n            }\r\n        \r\n        case types.rankStarGetBestRank:\r\n            return {\r\n                ...state,\r\n                bestScore: action.payload\r\n            }   \r\n        case types.rankCheckingFinish:\r\n            return {\r\n                ...state,\r\n                chekingRank: false\r\n            }\r\n        case types.rankStartUpdateRank:\r\n            return {\r\n                ...state,\r\n                bestScore: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    navBar: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiMostrarNavBar:\r\n            return {\r\n                ...state,\r\n                navBar: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { memoriceReducer } from '../reducers/memoriceReducer';\r\nimport { rankReducer } from '../reducers/rankReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    memorice: memoriceReducer,\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    rank: rankReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nimport AppRouter from './routes/AppRouter'   \r\nimport { store } from './store/store'\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}
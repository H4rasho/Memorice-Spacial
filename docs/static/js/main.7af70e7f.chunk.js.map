{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","actions/rank.js","hooks/useForm.js","components/auth/Login.js","components/auth/Register.js","helpers/validadorCampos.js","routes/AuthRoutes.js","actions/memorice.js","data/naves.js","components/ui/Instruciones.js","components/memorice/MemoriceJuego.js","helpers/restaurarNaves.js","components/memorice/Rank.js","components/ui/Footer.js","components/ui/Header.js","actions/ui.js","components/ui/NavBar.js","routes/MemoriceRoutes.js","routes/PrivateRoutes.js","routes/PublicRoutes.js","routes/AppRouter.js","reducers/authReducer.js","reducers/memoriceReducer.js","reducers/rankReducer.js","reducers/uiReducer.js","store/store.js","App.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","startLogout","dispatch","clear","logout","type","checkingFinish","login","user","payload","startRank","time","getBestRank","getRanks","ranks","updateBestRank","useForm","initialState","useState","values","setValues","reset","handleImputChange","target","name","value","Login","history","useDispatch","email","password","handleSubmit","e","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","startlogin","replace","className","onSubmit","placeholder","onChange","autoComplete","to","Register","password2","validadorCampos","startRegister","AuthRoutes","exact","path","component","ocultarNave","nave","clearActive","naves","id","modo","img","Instruciones","MemoriceJuego","click","setclick","cont","setCont","useSelector","state","memorice","active","naveS","rank","start","bestScore","navBar","ui","useEffect","disptach","console","log","handleClick","mostrarNave","length","finish","parseInt","startUpdateBestRank","startAddRank","setTimeout","setActiveNave","map","onClick","src","alt","icon","faRedo","size","cargarNaves","sort","Math","random","Rank","ranking","_id","Footer","faTwitter","faInstagram","Header","faBars","faSignOutAlt","NavBar","MemoriceRoutes","PrivateRoutes","isAuthenticated","Component","rest","props","PublicRoutes","App","auth","checking","chekingRank","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","ran","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7af70e7f.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\n const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    }else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') =>{\r\n \r\n    const url = `${ baseUrl }/${endpoint}`;//localhost:4000/api/endpoint\r\n    const token = localStorage.getItem('token') || '';\r\n \r\n    if(method ==='GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        } );\r\n    }\r\n \r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\n\r\nexport const types = {\r\n\r\n    cargarNaves: '[Memorice] Cargar Naves',\r\n    active: ' [Memorice] active',\r\n    mostarNave: '[Memorice] Mostrar',\r\n    ocultarNave: '[Memorice] Ocultar',\r\n    clearActive: '[Memorice] Clea active',\r\n    playAgain: '[Memorice] Play again',\r\n\r\n    uiOcultarNavBar: '[UI] Ocultar NavBar',\r\n    uiMostrarNavBar: '[Mostar] NavBar',\r\n\r\n\r\n    authCheckingFinish: '[auth] Checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n\r\n    login: '[Auth] Login',\r\n\r\n    rankAdd: '[Rank] add',\r\n    rankStart: '[Rank] Start',\r\n    timeUpdate: '[Rank] TimeUpdate',\r\n    upDateBestScore: 'Rank Update Best Score',\r\n    rankStartGetRank: '[Rank] Start Get Rank',\r\n    rankStarGetBestRank: '[Rank] Start Get Best Score',\r\n    rankStartAdd: '[Rank] Start new Rank',\r\n    rankStartUpdateRank: '[Rank] Start Update Rank',\r\n    rankCheckingFinish: ' [Rank] Checking finish ',\r\n\r\n}\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startlogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const cargarNombre = (user) => ({\r\n    type: types.login,\r\n    payload: user\r\n})\r\n\r\n\r\nexport const upDateBestScore = (rank) => ({\r\n    type: types.upDateBestScore,\r\n    payload: rank\r\n})\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else {\r\n            dispatch(checkingFinish());\r\n            console.log(body.msg)\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\nconst checkingFinish = ()=> ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})","import { fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const addRank = (rank) => ({\r\n    type: types.rankAdd,\r\n    payload: rank\r\n})\r\n\r\nexport const startRank = (time) => ({\r\n    type: types.rankStart,\r\n    payload: time\r\n})\r\n\r\nexport const timeupdate = (rank) => ({\r\n    type: types.timeUpdate,\r\n    payload: rank\r\n})\r\n\r\nexport const startGetRanks = () => {\r\n\r\n    return async (disptach) => {\r\n\r\n        const resp = await fetchConToken('rank')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            disptach(getRanks(body.ranks))\r\n        } else {\r\n            console.log(body.msg);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGetBestRank = () => {\r\n\r\n    return async (disptach) => {\r\n\r\n        const resp = await fetchConToken('rank/bestScore');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            if (body.bestScore) {\r\n                const time = body.bestScore.time;\r\n                const id = body.bestScore.id\r\n                disptach(getBestRank({time, id}))\r\n            }\r\n        }\r\n        else {\r\n            console.log(body.msg)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const startAddRank = (time) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('rank', {time}, 'POST')\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            console.log('agregado')\r\n        }\r\n        else {\r\n            console.log(body.msg)\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUpdateBestRank = (time, id) => {\r\n    return async(disptach) => {\r\n        console.log(`rank/update/${id}`);\r\n        const resp = await fetchConToken(`rank/update/${id}`, {time}, 'PUT');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            disptach(updateBestRank(time))\r\n            console.log('updated')\r\n        }\r\n        else {\r\n            console.log(body.msg)\r\n        }\r\n    } \r\n}\r\n\r\n\r\n\r\nexport const rankCheckingFinish = () => ({\r\n    type: types.rankCheckingFinish\r\n})\r\n\r\nconst getBestRank = (time) => ({\r\n    type: types.rankStarGetBestRank,\r\n    payload: time\r\n})\r\n\r\nconst getRanks = (ranks) => ({\r\n    type: types.rankStartGetRank,\r\n    payload: ranks\r\n})\r\n\r\nconst updateBestRank = (time) => ({\r\n    type: types.rankStartUpdateRank,\r\n    payload: time\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ()=> {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleImputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n\r\n    return [values, handleImputChange, reset];\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startlogin } from '../../actions/auth';\r\nimport { startRank } from '../../actions/rank';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const Login = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [values, handleImputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    \r\n    const {email, password} = values\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startlogin(email, password));\r\n        dispatch(startRank(new Date()));\r\n        history.replace('/')\r\n    }\r\n\r\n    return (\r\n        <form className=\"login-conteniner\" onSubmit={handleSubmit}>\r\n            <h1><b>Bienvendido a <br/> Memorice Spacial</b></h1>\r\n            <h2>Ingrese los datos</h2>\r\n            <input \r\n                type=\"email\"\r\n                name=\"email\" \r\n                placeholder=\"Correo\" \r\n                value={email}\r\n                onChange={handleImputChange}\r\n                autoComplete=\"off\"   \r\n            />\r\n            <input \r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                value={password}\r\n                onChange={handleImputChange}\r\n                autoComplete=\"off\"\r\n            />\r\n            <button onSubmit={handleSubmit}>Enviar</button>\r\n            <Link className=\"login__link\" to=\"/auth/register\" >No tienes cuenta, Registrate acá!</Link>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { validadorCampos } from '../../helpers/validadorCampos';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const Register = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [values, handleImputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const {name, email, password, password2} = values\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {ok, msg} = validadorCampos(name, email, password, password2)\r\n        if (ok === true){\r\n            dispatch(startRegister(email, password, name));\r\n        }\r\n        else{\r\n            Swal.fire('Error', msg, 'error')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-conteniner\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Registro</h1>\r\n                <h2>Ingrese los Datos</h2>\r\n                <label>Nombre</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Ingrese nombre\"\r\n                    onChange={handleImputChange}\r\n                    value={name}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <label>Correo</label>\r\n                <input \r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"xxxx@xxx.xxx\"\r\n                    onChange={handleImputChange}\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <label>Contraseña</label>\r\n                <input \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"xxxxxxxxxx\"\r\n                    onChange={handleImputChange}\r\n                    value={password}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <label>Confirmar Contraseaña</label>\r\n                <input \r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    placeholder=\"xxxxxxxxxx\"\r\n                    onChange={handleImputChange}\r\n                    value={password2}\r\n                    autoComplete=\"off\"\r\n                    \r\n                />\r\n               <button\r\n                    onSubmit={handleSubmit}\r\n               >\r\n                   Enviar\r\n               </button>\r\n               <Link className=\"login__link\" to=\"/auth/login\"> Ya tengo cuenta!</Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nexport const validadorCampos = (name, email, password, password2) => {\r\n    \r\n    if(name === '' || email === '' || password === '' || password2 === ''){\r\n        return {\r\n            ok: false,\r\n            msg: 'Debe completar todos los campos'\r\n        }\r\n    } \r\n    else if (password !== password2){\r\n        return {\r\n            ok: false,\r\n            msg: 'Las contraseñas deben ser iguales'\r\n        }\r\n    }\r\n    return {\r\n        ok: true,\r\n        msg: 'succes'\r\n    }\r\n}\r\n\r\n","\r\nimport React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { Login } from '../components/auth/Login'\r\nimport { Register } from '../components/auth/Register'\r\n\r\nexport const AuthRoutes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={Login} />\r\n                <Route exact path=\"/auth/register\" component={Register} />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setActiveNave = (nave) => ({\r\n    type: types.active,\r\n    payload: nave\r\n})\r\n\r\nexport const mostrarNave = (nave) => ({\r\n    type: types.mostarNave,\r\n    payload: nave\r\n})\r\n\r\nexport const ocultarNave = (nave) => ({\r\n    type: types.ocultarNave,\r\n    payload: nave\r\n})\r\n\r\n\r\n\r\nexport const cargarNaves = (naves) => ({\r\n    type: types.cargarNaves,\r\n    payload: naves\r\n})\r\n\r\nexport const clearActive = () => ({\r\n    type: types.clearActive\r\n})\r\n\r\nexport const playAgain = () => ({\r\n    type: types.playAgain\r\n})\r\n\r\n","\r\nexport const naves = [\r\n    {\r\n        id: \"nave01\",\r\n        name: \"nave1\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/goliethe_wsqhbz.png\",\r\n    },\r\n    {\r\n        id: \"nave02\",\r\n        name: \"nave1\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/goliethe_wsqhbz.png\",\r\n    },\r\n    {\r\n        id: \"nave03\",\r\n        name: \"nave2\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/FenixSkin_iibtf6.png\",\r\n    },\r\n    {\r\n        id: \"nave04\",\r\n        name: \"nave2\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/FenixSkin_iibtf6.png\",\r\n    },\r\n    {\r\n        id: \"nave05\",\r\n        name: \"nave3\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/CohegisSkin_hecunl.png\",\r\n    },\r\n    {\r\n        id: \"nave06\",\r\n        name: \"nave3\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/CohegisSkin_hecunl.png\",\r\n    },\r\n    {\r\n        id: \"nave07\",\r\n        name: \"nave4\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/phobia_ffqcpb.png\",\r\n    },\r\n    {\r\n        id: \"nave08\",\r\n        name: \"nave4\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/phobia_ffqcpb.png\",\r\n    },\r\n    {\r\n        id: \"nave09\",\r\n        name: \"nave5\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/payrex_a3ojun.png\",\r\n    },\r\n    {\r\n        id: \"nave10\",\r\n        name: \"nave5\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/payrex_a3ojun.png\",\r\n    },\r\n    {\r\n        id: \"nave11\",\r\n        name: \"nave6\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/BlazeSkin_clazfz.png\",\r\n    },\r\n    {\r\n        id: \"nave12\",\r\n        name: \"nave6\",\r\n        modo: \"oculto\",\r\n        img: \"https://res.cloudinary.com/h4rasho/image/upload/v1628632026/memorice-spacial/BlazeSkin_clazfz.png\",\r\n    },\r\n    \r\n]\r\n\r\n","import React from 'react'\r\n\r\nexport const Instruciones = () => {\r\n    return (\r\n        <div className=\"memorice__instructions\">\r\n            <h1>Instruciones</h1>\r\n            <p>Has click en dos cartas si las cartas son iguales, has desbloquedao esa Nave Spacial, en caso contrario las cartas se ocultaran de nuevo,\r\n                intenta memorizar la cartas, para desbloquearlas en el menor tiempo posible. ¿Podras estar en el Ranking?    \r\n            </p> \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2';\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { cargarNaves, clearActive, mostrarNave, ocultarNave, playAgain, setActiveNave } from '../../actions/memorice';\r\nimport { naves } from '../../data/naves'\r\nimport { Instruciones } from '../ui/Instruciones';\r\nimport { startAddRank, startGetBestRank, startRank, startUpdateBestRank } from '../../actions/rank';\r\nimport { restaurasNaves } from '../../helpers/restaurarNaves';\r\n\r\nexport const MemoriceJuego = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [click, setclick] = useState(0)\r\n    const [cont, setCont] = useState(0)\r\n\r\n    const { active, naveS } = useSelector(state => state.memorice)\r\n    const {start, bestScore} = useSelector(state => state.rank)\r\n    const {navBar} = useSelector(state => state.ui)\r\n\r\n    useEffect(() => {\r\n        dispatch(startGetBestRank());\r\n        dispatch(startRank(new Date()));\r\n    }, [dispatch])\r\n\r\n    const handleClick = (nave) => {\r\n\r\n        if (click < 2){\r\n            nave.modo = \"descubierto\"\r\n            setclick(click+1)\r\n            dispatch(mostrarNave(nave))\r\n            if (!active) {\r\n                dispatch(setActiveNave(nave))\r\n            }\r\n            else {\r\n                if (active.name === nave.name) {\r\n                    dispatch(clearActive())\r\n                    setclick(0)\r\n                    setCont(cont+1)\r\n                    if (cont+1 === naveS.length /2){\r\n                        const finish = new Date()\r\n                        const time = parseInt(finish.getTime() - start.getTime()) / 1000;\r\n                        Swal.fire('Felicitaciones', `<h1> Has ganado en <b style=\"color:red\">${time}<b> seg </h1>`, 'success')\r\n                        if (!bestScore){\r\n                            dispatch(startAddRank(time));\r\n                        }\r\n                        else if( time < bestScore.time){\r\n                            const id = bestScore.id\r\n                            dispatch(startUpdateBestRank(time, id))\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    setTimeout(() => {\r\n                        nave.modo = \"oculto\"\r\n                        dispatch(ocultarNave(nave))\r\n                        active.modo = \"oculto\"\r\n                        dispatch(ocultarNave(active))\r\n                        dispatch(clearActive())\r\n                        setclick(0)\r\n                    }, 1000);\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePlayAgain = () => {\r\n        console.log(\"click\");\r\n        setclick(0)\r\n        setCont(0)\r\n        restaurasNaves(naves);\r\n        dispatch(playAgain())\r\n        dispatch(startRank(new Date()))\r\n        dispatch(cargarNaves(naves.sort(function () { return Math.random() - 0.5 })));\r\n    }\r\n\r\n    return (\r\n        <div className={`${navBar ? \"memorice__juego-navBar\" : \"memorice__juego-noNavBAr\"} memorice__juego`}> \r\n            <Instruciones />\r\n            <div className=\"memorice__juego-cards\">\r\n                {\r\n                    naveS.map((nave) => (\r\n                        \r\n                        nave.modo === 'oculto'\r\n                            ? <div className=\"memorice__card memorice__card-img-oculta \" key={nave.id} onClick={(e) => handleClick(nave)}>\r\n\r\n                            </div>\r\n                            : <div\r\n                                className=\"memorice__card\"\r\n                                key={nave.id}\r\n                            >\r\n                                <img className=\"memorice__card-img\" src={nave.img} alt=\"nashor spacial\" />\r\n                            </div>\r\n                    ))\r\n                }\r\n                <div className=\"memorice__button\">\r\n                    <FontAwesomeIcon \r\n                        className=\"memorice__button-play-again\" \r\n                        icon={faRedo} \r\n                        size=\"2x\"\r\n                        onClick={handlePlayAgain}    \r\n                    />\r\n                </div>\r\n                <h4 className=\"memorice__button-title\">Jugar otra vez</h4>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n\r\nexport const  restaurasNaves = (naves) => {\r\n    return naves.map(nave => (\r\n        nave.modo = \"oculto\"\r\n    ))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { rankCheckingFinish, startGetRanks } from '../../actions/rank'\r\n\r\nexport const Rank = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(startGetRanks());\r\n        dispatch(rankCheckingFinish());\r\n    }, [dispatch])\r\n\r\n    const {navBar} = useSelector(state => state.ui)\r\n    const {ranking} = useSelector(state => state.rank)\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={`${navBar ? \"memorice__juego-navBar\" : \"memorice__juego-noNavBAr\"} rank__container`}>\r\n            <h1>Top 10</h1>\r\n            {\r\n                ranking.length > 0\r\n                    ?\r\n                    <table className=\"rank__table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Time  [s]</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                ranking.map(rank => (\r\n                                    <tr key={rank.user._id}>\r\n                                    <td> {rank.user.name} </td>\r\n                                    <td> {rank.time} </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <h2>No Rank encontrado</h2>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"memorice__footer\">\r\n\r\n            <div>\r\n                <h4 className=\"memorice__autor\">Desarrollado por</h4>\r\n                <h5 className=\"memorice__autor\">H4rasho</h5>\r\n                <FontAwesomeIcon icon= {faTwitter} size=\"2x\"/> <span>  Twitter</span>\r\n            </div>\r\n            <div>\r\n                <h4 className=\"memorice__autor\">Diseño de naves</h4>\r\n                <h5 className=\"memorice__autor\">Maximus Games Studios</h5>\r\n                <FontAwesomeIcon icon= {faInstagram} size=\"2x\"/> <span>  Instagram</span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mostarNavBar } from '../../actions/ui';\r\nimport { Link } from 'react-router-dom';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Header = () => {\r\n\r\n    const {navBar} = useSelector(state => state.ui)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(mostarNavBar(navBar))\r\n        \r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <header className=\"memorice__header\">\r\n            <img src=\"https://cdn.discordapp.com/attachments/823026225194336286/870417421859684392/120x120.png\" className=\"memorice__header-logo\" alt=\"nashor spacial\"/>\r\n            <h1 className=\"memorice__header-title\">MEMORICE SPACIAL</h1>\r\n            <FontAwesomeIcon icon= {faBars}  size=\"2x\" onClick={handleClick} className=\"memorice__icon-header\"/>\r\n            <nav className=\"memorice__nav-laptop\">\r\n                <ul>\r\n                    <Link className=\"memorice__nav-laptop-Link\" to=\"/\">Inicio</Link>\r\n                    <Link className=\"memorice__nav-laptop-Link\" to=\"/rank\">Rank</Link>\r\n                    <button\r\n                        className=\"memorice__button-NavBar\"\r\n                        onClick={handleLogout} \r\n                    >\r\n                        <FontAwesomeIcon icon={ faSignOutAlt } />\r\n                        <span> Salir </span>\r\n                    </button>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const mostarNavBar = (estado) => ({\r\n    type: types.uiMostrarNavBar,\r\n    payload: !estado\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\n\r\nexport const NavBar = () => {\r\n    const {navBar} = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <nav className={`${navBar ? \"memorice__NavBar\" : \"dispay-none\"}`}>\r\n            <ul>\r\n                <Link className=\"memorice__nav-Link\" to=\"/\">Inicio</Link>\r\n                <Link className=\"memorice__nav-Link\" to=\"/rank\">Rank</Link>\r\n                <Link \r\n                    className=\"memorice__nav-Link\" to=\"/\"\r\n                    onClick={handleLogout}\r\n                >    \r\n                Salir</Link>\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { MemoriceJuego } from '../components/memorice/MemoriceJuego'\r\nimport { Rank } from '../components/memorice/Rank'\r\nimport { Footer } from '../components/ui/Footer'\r\nimport { Header } from '../components/ui/Header'\r\nimport { NavBar } from '../components/ui/NavBar'\r\n\r\nexport const MemoriceRoutes = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"memorice__container\">\r\n                <Header />\r\n                <NavBar />\r\n                <Switch>              \r\n                    <Route exact path=\"/\" component={ MemoriceJuego }/>\r\n                    <Route exact path=\"/rank\" component={ Rank }/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n                <Footer />    \r\n            </div>     \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component= { (props) => (\r\n                (isAuthenticated)\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/auth/login\"/>   \r\n            )}\r\n        />\r\n            \r\n    )   \r\n}\r\n\r\n\r\nPrivateRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component= { (props) => (\r\n                (isAuthenticated)\r\n                ? <Redirect to=\"/\"/>   \r\n                : <Component {...props} />\r\n            )}\r\n        />\r\n            \r\n    )   \r\n}\r\n\r\n\r\nPublicRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { AuthRoutes } from \"./AuthRoutes\";\r\nimport { MemoriceRoutes } from \"./MemoriceRoutes\";\r\nimport { PrivateRoutes } from \"./PrivateRoutes\";\r\nimport { PublicRoutes } from \"./PublicRoutes\";\r\n\r\nexport default function App() {\r\n\r\n  const { checking, uid } = useSelector(state => state.auth)\r\n  \r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n\r\n    dispatch(startChecking())\r\n\r\n  }, [dispatch]);\r\n\r\n  if(checking){\r\n    return <h5>Espere</h5>\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoutes \r\n              path=\"/auth\" \r\n              component={AuthRoutes}\r\n              isAuthenticated={!!uid} \r\n          />\r\n          <PrivateRoutes \r\n              path=\"/\" \r\n              component={MemoriceRoutes} \r\n              isAuthenticated={!!uid} \r\n              />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n     \r\n    switch (action.type) {\r\n           \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            } \r\n\r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.upDateBestScore:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    bestScore: action.payload\r\n                }\r\n            }\r\n        case types.authLogout : \r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import { naves } from \"../data/naves\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    naveS: naves.sort(function () { return Math.random() - 0.5 }),\r\n    active: null,\r\n}\r\n\r\n\r\nexport const memoriceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.active:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    id: action.payload.id,\r\n                    name: action.payload.name,\r\n                    img: action.payload.img \r\n                }\r\n            }\r\n\r\n        case types.mostarNave: \r\n            return{\r\n                ...state,\r\n                naveS: state.naveS.map(nave => \r\n                    nave.id === action.payload\r\n                    ? action.payload\r\n                    : nave   \r\n                )\r\n            }\r\n\r\n        case types.ocultarNave: \r\n            return{\r\n                ...state,\r\n                naveS: state.naveS.map(nave => \r\n                    nave.id === action.payload.id\r\n                    ? action.payload\r\n                    : nave   \r\n                )\r\n            }\r\n\r\n        case types.clearActive:{\r\n            return {\r\n                ...state,\r\n                active: null\r\n            }\r\n        }\r\n        case types.playAgain:\r\n            return initialState\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    ranking: [],\r\n    bestScore: null,\r\n    chekingRank: true\r\n}\r\n\r\n\r\nexport const rankReducer = (state= initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.rankAdd:\r\n            return {\r\n                ...state,\r\n                ranking: [\r\n                    ...state.ranking,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.rankStart:\r\n            return {\r\n                ...state,\r\n                start: action.payload\r\n            }\r\n        case types.timeUpdate:\r\n            return {\r\n                ...state,\r\n                rank: state.rank.map(ran=> (\r\n                    ran.name === action.payload.name\r\n                    ? ran.time = action.payload.time\r\n                    : ran\r\n                ))\r\n            }\r\n        case types.rankStartGetRank:\r\n            return {\r\n                ...state,\r\n                ranking: action.payload\r\n                \r\n            }\r\n        \r\n        case types.rankStarGetBestRank:\r\n            return {\r\n                ...state,\r\n                bestScore: action.payload\r\n            }   \r\n        case types.rankCheckingFinish:\r\n            return {\r\n                ...state,\r\n                chekingRank: false\r\n            }\r\n        case types.rankStartUpdateRank:\r\n            return {\r\n                ...state,\r\n                bestScore: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    navBar: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiMostrarNavBar:\r\n            return {\r\n                ...state,\r\n                navBar: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { memoriceReducer } from '../reducers/memoriceReducer';\r\nimport { rankReducer } from '../reducers/rankReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    memorice: memoriceReducer,\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    rank: rankReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\n","import React from 'react'\nimport {Provider} from 'react-redux'\n\n\nimport AppRouter from './routes/AppRouter'   \nimport { store } from './store/store'\nimport './styles/styles.scss'\n\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}